class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t,e){let l=DBHelper.DATABASE_URL;e&&(l=l+"/"+e),fetch(l,{method:"GET"}).then(e=>{e.json().then(e=>t(null,e))}).catch(e=>{t(`Failed beacause ${e}`,null)})}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((l,a)=>{if(l)e(l,null);else{const l=a.find(e=>e.id==t);l?e(null,l):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((l,a)=>{if(l)e(l,null);else{const l=a.filter(e=>e.cuisine_type==t);e(null,l)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((l,a)=>{if(l)e(l,null);else{const l=a.filter(e=>e.neighborhood==t);e(null,l)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,l){DBHelper.fetchRestaurants((a,n)=>{if(a)l(a,null);else{let a=n;"all"!=t&&(a=a.filter(e=>e.cuisine_type==t)),"all"!=e&&(a=a.filter(t=>t.neighborhood==e)),l(null,a)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,l)=>{if(e)t(e,null);else{const e=l.map((t,e)=>l[e].neighborhood),a=e.filter((t,l)=>e.indexOf(t)==l);t(null,a)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,l)=>{if(e)t(e,null);else{const e=l.map((t,e)=>l[e].cuisine_type),a=e.filter((t,l)=>e.indexOf(t)==l);t(null,a)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/${t.photograph}.jpg`}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}